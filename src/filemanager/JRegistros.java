/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filemanager;

import java.awt.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lesterarte
 */
public final class JRegistros extends javax.swing.JFrame {
    
    ArrayList<fieldStructure> listaCampos= new ArrayList();
    Stack<Integer> pilaBuffer  = new Stack<>(); 
    ArrayList<String> Registros = new ArrayList();

    /**
     * Creates new form JRegistros
     */
    public JRegistros() {
        initComponents();
        this.setSize(900,550);
        this.setLocationRelativeTo(this);
        this.setTitle("REGISTROS");
        archivoSeleccionado = seleccionarArchivo();
        File archivo = new File("tables\\"+archivoSeleccionado);
        try {
            cargarCampos(archivo);
            CargarArchivoEstructura();
            crearModelo();
            crearTabla();
        } catch (IOException e) {
            System.out.println("Ups!!! algo salio mal con el archivo");
        }
        crearTabla();
        try {
            CargarArchivoEstructura();
        } catch (IOException ex) {
            Logger.getLogger(JRegistros.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCrearRegistro = new javax.swing.JButton();
        btnModificarRegistro = new javax.swing.JButton();
        btnBorrarRegistro = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        JPanelTabla = new javax.swing.JPanel();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCrearRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filemanager/Icons/crearCamp.png"))); // NOI18N
        btnCrearRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearRegistroActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrearRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 52, 90, 83));

        btnModificarRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filemanager/Icons/modificarCampo.png"))); // NOI18N
        btnModificarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarRegistroActionPerformed(evt);
            }
        });
        getContentPane().add(btnModificarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 167, 90, 83));

        btnBorrarRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filemanager/Icons/borrar formato.png"))); // NOI18N
        btnBorrarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarRegistroActionPerformed(evt);
            }
        });
        getContentPane().add(btnBorrarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 277, 90, 83));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Agregar registro");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Modificar Registro");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 256, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Eliminar Registro");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 366, -1, -1));
        getContentPane().add(JPanelTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 660, 420));

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filemanager/Icons/next.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        getContentPane().add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 450, -1, 30));

        btnPrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filemanager/Icons/previous.png"))); // NOI18N
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrevious, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 450, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearRegistroActionPerformed
      /*  this.txtNombresCampos.setEnabled(true);
        this.txtNombresCampos.requestFocus();
        this.btnModificarRegistro.setEnabled(false);
        this.btnBorrarRegistro.setEnabled(false);
        this.btnCrearRegistro.setEnabled(false);
        btnGuardarRegistro.setEnabled(false);*/
    }//GEN-LAST:event_btnCrearRegistroActionPerformed

    private void btnModificarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarRegistroActionPerformed
      /*  if(cmbCamposDisponibles.getSelectedItem().equals("ID")){
            JOptionPane.showMessageDialog(null,"el Campo: " + cmbCamposDisponibles.getSelectedItem()+
                " no puede ser Modificado");
        }else{
            this.txtNombresCampos.setEnabled(true);
            this.btnModificarRegistro.setEnabled(false);
            this.btnBorrarRegistro.setEnabled(false);
            this.btnCrearRegistro.setEnabled(false);

            //agregar valores del campo seleccionado al Campo
            txtNombresCampos.setText(listaCampos.get(cmbCamposDisponibles.getSelectedIndex()).getFieldName());
            listaCampos.remove(cmbCamposDisponibles.getSelectedIndex());
            camposDisponibles();
            txtNombresCampos.setEnabled(true);
            cmbLlaveSecundaria.setEnabled(true);
            cmbTipoDato.setEnabled(true);
            txtNombresCampos.requestFocus();
        }*/
    }//GEN-LAST:event_btnModificarRegistroActionPerformed

    private void btnBorrarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarRegistroActionPerformed
        
    }//GEN-LAST:event_btnBorrarRegistroActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPreviousActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JRegistros().setVisible(true);
            }
        });
    }
    public String seleccionarArchivo(){
        File path = new File("tables");
        String[] listaArchivos = path.list();
        JComboBox cmbJOptionPane = new JComboBox(listaArchivos);
        JOptionPane.showMessageDialog( null, cmbJOptionPane, "Mostrar Datos Archivo", JOptionPane.QUESTION_MESSAGE);
        return (String)cmbJOptionPane.getSelectedItem();    
    }
    public void cargarCampos(File archivo) throws IOException{
        try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
            String linea ;
            
            while((linea = br.readLine()) != null){
                bytesMetaCampos+=linea.length()+2;
                if(linea.equals("#")){
                    break;
                }else{
                    String lineCampos[] = linea.split("\\|");
                    listaCampos.add(new fieldStructure(Boolean.valueOf(lineCampos[0]),lineCampos[1],lineCampos[2],
                            Integer.valueOf(lineCampos[3])));   
                }
            }
        }
    }
    public byte[] leerArchivoBuffer(String file, int post, int size) throws IOException{
        byte[]  leerBytes;
        try (RandomAccessFile archivo = new RandomAccessFile(file,"r")) {
            archivo.seek(post);
            leerBytes = new byte[size];
            archivo.read(leerBytes);
        }
        System.out.println(new String(leerBytes));
        return leerBytes;           
    }
    public DefaultTableModel crearModelo (){
        DefaultTableModel modeloTabla = new DefaultTableModel();
        //agregar columnas por medio de campos
        listaCampos.forEach((listaCampo) -> {
            modeloTabla.addColumn(listaCampo.getFieldName());
        });
        //agregar filas
        Registros.stream().map((Registro) -> Registro.split("\\|")).forEachOrdered((actualRegistro) -> {
            modeloTabla.addRow(actualRegistro);
        });  
        return modeloTabla;
    }
    
    public void CargarArchivoEstructura() throws IOException{
        String lineaLeidaBuffer = new String(leerArchivoBuffer("tables\\"+archivoSeleccionado,bytesMetaCampos,sizeLectura));
     
        String [] registrosSeparados = lineaLeidaBuffer.split("\\\n");
        postLectura += lineaLeidaBuffer.length()- 
                registrosSeparados[registrosSeparados.length-1].length();
        for (int i = 0; i < registrosSeparados.length-1; i++) {
            Registros.add(registrosSeparados[i]);
        }
        /*for (String registrosSeparado : registrosSeparados) {
            String[] camposSeperados = registrosSeparado.split("\\|");
            if(camposSeperados.length == listaCampos.size()){
                                                
            }
        }*/
       
    }
    public void crearTabla(){
        
        JPanelTabla.setLayout(new BorderLayout());
        JTable tabla = new JTable(crearModelo());
        //agrega el scrollpane
        JScrollPane scrollPane = new JScrollPane(tabla);
        tabla.setFillsViewportHeight(true);
        JPanelTabla.add(scrollPane);   
    }
  
    
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelTabla;
    private javax.swing.JButton btnBorrarRegistro;
    private javax.swing.JButton btnCrearRegistro;
    private javax.swing.JButton btnModificarRegistro;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
    private int bytesMetaCampos=0;
    private int bytesMetaAvailList=0;
    final int delimitadorRegistros =10;
    private int postLectura=0;
    private int sizeLectura=200;
    private String archivoSeleccionado;
    
}
